[94;43m//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////

[30;47mTotal Marks =  34
*************************************
*************************************

5	passed! original example!
5	passed! testing to see if you keep the rest of sudoku unchanged!
2	passed! original example!
2	passed! edge case
1	passed! another edge case
3	passed! One blank. You should pass either this or the next. Checks for correct identification of rows and columns
0	failed!( !!!! original marks = 1 !!!!)One blank. read the previous description. Expected <(1,0) > got  < (0,0)
2	passed! Two blanks. You should pass either this one or the next
0	failed!( !!!! original marks = 2 !!!!)Two blanks. read the previous description. Expected <(8,8) > got  < (0,0)
1	passed! all blank is not solved
1	passed! example is not solved
1	passed! impossible is solved
2	passed! solved is solved
0.5	passed! The example is a Sudoku
0.5	passed! The all blank is a Sudoku
0	failed!( !!!! original marks = 1 !!!!)Should not have repeated numbers. Expected <False > got  < True
0.5	passed! The should have exactly 9 rows is a Sudoku
1	passed! The should have exactly 9 columns is a Sudoku
0.5	passed! The should have exactly 9 columns is a Sudoku
2	passed! list of list of Nothings
[94;43m//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////

[31;47mChecking printSudoku Function
*************************************
*************************************

Total Marks =  10
*************************************
*************************************

.........
.........
.........
.........
.........
.........
.........
.........
.........

*************************************
*************************************

Sudoku to be printed
*************************************

[["_","6","4","8","7","1","2","9","5"],["7","5","2","9","3","6","1","8","4"],["8","1","9","2","5","4","7","3","6"],["5","9","6","7","1","3","4","2","8"],["4","3","1","5","8","2","6","7","9"],["2","7","8","4","6","9","3","5","1"],["6","4","5","3","2","8","9","1","7"],["9","8","3","1","4","7","5","6","2"],["1","2","7","6","9","5","8","4","3"]]
*************************************

Printed Sudoku
*************************************

.64871295
752936184
819254736
596713428
431582679
278469351
645328917
983147562
127695843

*************************************

[94;43m//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////

[31;47mTotal Marks =  15
*************************************
*************************************

checking solve function (for multiple solutions) 
Checked successfully for allBlankSudoku: multiple solutions are unique
Checked successfully for example: multiple solutions are unique

[94;43m//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////

[30;47mTotal Marks =  6
*************************************
*************************************

checking solve function (for simple sudokus) 
Successfully tested  for very simple Sudokus
[94;43m//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////

[30;47mChecking readSudoku Function
*************************************
*************************************

Total Marks =  10
*************************************
*************************************

Expecting a properly printed sudoku(as this is a valid sudoku)
*************************************

36..712..
.5....18.
..92.47..
....13.28
4..5.2..9
27.46....
..53.89..
.83....6.
..769..43

*************************************

Expecting an error or exception
